<div class="d-flex justify-between align-center mb-4">
  <h1>Create a New Character</h1>
  <a href="/characters/my-characters" class="btn btn-outline">
    <i class="fas fa-arrow-left"></i> Back to My Characters
  </a>
</div>

<div class="card">
  <div class="card-body">
    <form action="/characters/create" method="POST">
      <div class="row">
        <!-- Basic Information -->
        <div class="col" style="flex: 0 0 70%;">
          <h3>Basic Information</h3>
          
          <div class="form-group">
            <label for="name">Character Name *</label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              class="form-control" 
              value="<%= typeof character !== 'undefined' ? character.name : '' %>"
              required
            />
          </div>
          
          <div class="row">
            <div class="col">
              <div class="form-group">
                <label for="nickname">Nickname</label>
                <input 
                  type="text" 
                  id="nickname" 
                  name="nickname" 
                  class="form-control" 
                  value="<%= typeof character !== 'undefined' ? character.nickname : '' %>"
                />
              </div>
            </div>
            
            <div class="col">
              <div class="form-group">
                <label for="age">Age</label>
                <input 
                  type="text" 
                  id="age" 
                  name="age" 
                  class="form-control" 
                  value="<%= typeof character !== 'undefined' ? character.age : '' %>"
                />
              </div>
            </div>
            
            <div class="col">
              <div class="form-group">
                <label for="gender">Gender</label>
                <input 
                  type="text" 
                  id="gender" 
                  name="gender" 
                  class="form-control" 
                  value="<%= typeof character !== 'undefined' ? character.gender : '' %>"
                />
              </div>
            </div>
          </div>

          <div class="form-group">
            <label for="role">Character Role</label>
            <select id="role" name="role" class="form-control" onchange="toggleTeamFields()">
              <option value="Civilian" <%= typeof character !== 'undefined' && character.role === 'Civilian' ? 'selected' : '' %>>Civilian</option>
              <option value="Player" <%= typeof character !== 'undefined' && character.role === 'Player' ? 'selected' : '' %>>Player</option>
              <option value="Staff" <%= typeof character !== 'undefined' && character.role === 'Staff' ? 'selected' : '' %>>Staff</option>
            </select>
          </div>
          
          <div id="teamFields" style="display: none;">
            <div class="form-group">
              <label for="teamId">Team</label>
              <select id="teamId" name="teamId" class="form-control">
                <option value="">-- Select a team --</option>
                <% if (typeof teams !== 'undefined' && teams.length > 0) { %>
                  <% teams.forEach(team => { %>
                    <option value="<%= team.id %>" <%= typeof character !== 'undefined' && character.teamId == team.id ? 'selected' : '' %>><%= team.name %></option>
                  <% }); %>
                <% } %>
              </select>
            </div>
            
            <div id="playerFields" style="display: none;">
              <div class="form-group">
                <label for="position">Position</label>
                <input 
                  type="text" 
                  id="position" 
                  name="position" 
                  class="form-control" 
                  value="<%= typeof character !== 'undefined' ? character.position || '' : '' %>" 
                  placeholder="e.g., Center, Left Wing, Goalie, etc."
                />
              </div>
              
              <div class="form-group">
                <label for="jerseyNumber">Jersey Number</label>
                <input 
                  type="number" 
                  id="jerseyNumber" 
                  name="jerseyNumber" 
                  class="form-control" 
                  min="1"
                  max="99"
                  value="<%= typeof character !== 'undefined' ? character.jerseyNumber || '' : '' %>" 
                  placeholder="1-99"
                />
              </div>
            </div>
          </div>
          
          <div class="form-group">
            <label for="shortBio">Short Bio</label>
            <textarea 
              id="shortBio" 
              name="shortBio" 
              class="form-control" 
              placeholder="A brief summary of your character (max 255 characters)"
              maxlength="255" 
              rows="3"
            ><%= typeof character !== 'undefined' ? character.shortBio : '' %></textarea>
          </div>
        </div>
        
        <!-- Avatar URL and preview -->
        <div class="col" style="flex: 0 0 30%;">
          <h3>Character Image</h3>
          
          <div class="form-group">
            <div class="mb-2" id="avatar-preview-container">
              <div style="width: 100%; height: 250px; background-color: #555; border-radius: var(--radius-md); display: flex; align-items: center; justify-content: center;" id="avatar-preview">
                <i class="fas fa-user-circle" style="font-size: 3rem; color: #999;"></i>
              </div>
            </div>
            
            <label for="avatarUrl">Avatar Image URL</label>
            <input 
              type="url" 
              id="avatarUrl" 
              name="avatarUrl" 
              class="form-control" 
              placeholder="https://example.com/image.jpg"
              value="<%= typeof character !== 'undefined' ? character.avatarUrl : '' %>"
            />
            <small style="color: rgba(255, 255, 255, 0.5);">Enter a direct link to an image (JPG, PNG, or GIF)</small>
          </div>
          
          <div class="form-group">
            <label for="faceclaim">Faceclaim (Optional)</label>
            <input 
              type="text" 
              id="faceclaim" 
              name="faceclaim" 
              class="form-control" 
              value="<%= typeof character !== 'undefined' ? character.faceclaim : '' %>"
              placeholder="Actor/Model name"
            />
          </div>
        </div>
      </div>
      
      <hr style="border-color: rgba(255, 255, 255, 0.1); margin: 30px 0;">
      
      <!-- Character Details Tabs -->
      <div class="character-tabs mb-4">
        <div class="character-tab-links">
          <a href="#tab-personality" class="character-tab-link active">Personality</a>
          <a href="#tab-appearance" class="character-tab-link">Appearance</a>
          <a href="#tab-background" class="character-tab-link">Background</a>
          <a href="#tab-stats" class="character-tab-link">Stats</a>
          <a href="#tab-details" class="character-tab-link">Additional Details</a>
        </div>
        
        <div class="character-tab-content">
          <!-- Personality Tab -->
          <div id="tab-personality" class="character-tab-pane active">
            <div class="form-group">
              <label for="personality">Personality</label>
              <textarea 
                id="personality" 
                name="personality" 
                class="form-control" 
                rows="8"
              ><%= typeof character !== 'undefined' ? character.personality : '' %></textarea>
            </div>
            
            <div class="row">
              <div class="col">
                <div class="form-group">
                  <label for="likes">Likes</label>
                  <textarea 
                    id="likes" 
                    name="likes" 
                    class="form-control" 
                    rows="4"
                  ><%= typeof character !== 'undefined' ? character.likes : '' %></textarea>
                </div>
              </div>
              
              <div class="col">
                <div class="form-group">
                  <label for="dislikes">Dislikes</label>
                  <textarea 
                    id="dislikes" 
                    name="dislikes" 
                    class="form-control" 
                    rows="4"
                  ><%= typeof character !== 'undefined' ? character.dislikes : '' %></textarea>
                </div>
              </div>
            </div>
            
            <div class="row">
              <div class="col">
                <div class="form-group">
                  <label for="fears">Fears</label>
                  <textarea 
                    id="fears" 
                    name="fears" 
                    class="form-control" 
                    rows="4"
                  ><%= typeof character !== 'undefined' ? character.fears : '' %></textarea>
                </div>
              </div>
              
              <div class="col">
                <div class="form-group">
                  <label for="goals">Goals</label>
                  <textarea 
                    id="goals" 
                    name="goals" 
                    class="form-control" 
                    rows="4"
                  ><%= typeof character !== 'undefined' ? character.goals : '' %></textarea>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Appearance Tab -->
          <div id="tab-appearance" class="character-tab-pane">
            <div class="form-group">
              <label for="appearance">Physical Appearance</label>
              <textarea 
                id="appearance" 
                name="appearance" 
                class="form-control" 
                rows="12"
              ><%= typeof character !== 'undefined' ? character.appearance : '' %></textarea>
            </div>
          </div>

          <!-- Stats Tab -->
          <div id="tab-stats" class="character-tab-pane">
            <h3 class="mb-3">Character Stats</h3>
            
            <div class="stats-container">
              <div class="stats-grid">
                <!-- Strength -->
                <div class="stat-item">
                  <div class="attribute-header">
                    <label for="strength">Strength</label>
                    <span class="attribute-value" id="strengthValue">0</span>
                  </div>
                  <input 
                    type="range" 
                    id="strength" 
                    name="strength" 
                    min="0" 
                    max="100" 
                    value="0" 
                    class="attribute-slider"
                  />
                  <div class="attribute-description">
                    Physical power, lifting capacity, and melee damage.
                  </div>
                </div>
                
                <!-- Dexterity -->
                <div class="stat-item">
                  <div class="attribute-header">
                    <label for="dexterity">Dexterity</label>
                    <span class="attribute-value" id="dexterityValue">0</span>
                  </div>
                  <input 
                    type="range" 
                    id="dexterity" 
                    name="dexterity" 
                    min="0" 
                    max="100" 
                    value="0" 
                    class="attribute-slider"
                  />
                  <div class="attribute-description">
                    Agility, reflexes, balance, and precision.
                  </div>
                </div>
                
                <!-- Constitution -->
                <div class="stat-item">
                  <div class="attribute-header">
                    <label for="constitution">Constitution</label>
                    <span class="attribute-value" id="constitutionValue">0</span>
                  </div>
                  <input 
                    type="range" 
                    id="constitution" 
                    name="constitution" 
                    min="0" 
                    max="100" 
                    value="0" 
                    class="attribute-slider"
                  />
                  <div class="attribute-description">
                    Health, stamina, and vital force.
                  </div>
                </div>
                
                <!-- Intelligence -->
                <div class="stat-item">
                  <div class="attribute-header">
                    <label for="intelligence">Intelligence</label>
                    <span class="attribute-value" id="intelligenceValue">0</span>
                  </div>
                  <input 
                    type="range" 
                    id="intelligence" 
                    name="intelligence" 
                    min="0" 
                    max="100" 
                    value="0" 
                    class="attribute-slider"
                  />
                  <div class="attribute-description">
                    Learning ability, memory, and reasoning.
                  </div>
                </div>
                
                <!-- Wisdom -->
                <div class="stat-item">
                  <div class="attribute-header">
                    <label for="wisdom">Wisdom</label>
                    <span class="attribute-value" id="wisdomValue">0</span>
                  </div>
                  <input 
                    type="range" 
                    id="wisdom" 
                    name="wisdom" 
                    min="0" 
                    max="100" 
                    value="0" 
                    class="attribute-slider"
                  />
                  <div class="attribute-description">
                    Perception, intuition, and insight.
                  </div>
                </div>
                
                <!-- Charisma -->
                <div class="stat-item">
                  <div class="attribute-header">
                    <label for="charisma">Charisma</label>
                    <span class="attribute-value" id="charismaValue">0</span>
                  </div>
                  <input 
                    type="range" 
                    id="charisma" 
                    name="charisma" 
                    min="0" 
                    max="100" 
                    value="0" 
                    class="attribute-slider"
                  />
                  <div class="attribute-description">
                    Force of personality, persuasiveness, and leadership.
                  </div>
                </div>
              </div>
              
              <div class="row mt-4">
                <div class="col">
                  <div class="form-group">
                    <label for="personalityType">Personality Type (Optional)</label>
                    <input 
                      type="text" 
                      id="personalityType" 
                      name="personalityType" 
                      class="form-control" 
                      value="" 
                      placeholder="e.g., INFJ, 4w5, etc."
                    />
                    <small style="color: rgba(255, 255, 255, 0.5);">MBTI, Enneagram, or other personality system</small>
                  </div>
                </div>
                
                <div class="col">
                  <div class="form-group">
                    <label for="occupation">Occupation (Optional)</label>
                    <input 
                      type="text" 
                      id="occupation" 
                      name="occupation" 
                      class="form-control" 
                      value="" 
                      placeholder="e.g., Doctor, Mechanic, Student, etc."
                    />
                  </div>
                </div>
              </div>
              
              <div class="quick-set-buttons mt-3">
                <p>Quick Presets:</p>
                <button type="button" class="btn btn-sm" onclick="setBalanced()">Balanced</button>
                <button type="button" class="btn btn-sm" onclick="setWarrior()">Warrior</button>
                <button type="button" class="btn btn-sm" onclick="setScholar()">Scholar</button>
                <button type="button" class="btn btn-sm" onclick="setRogue()">Rogue</button>
                <button type="button" class="btn btn-sm" onclick="setLeader()">Leader</button>
                <button type="button" class="btn btn-sm btn-danger" onclick="resetStats()">Reset All</button>
              </div>
            </div>
          </div>
          
          <!-- Background Tab -->
          <div id="tab-background" class="character-tab-pane">
            <div class="form-group">
              <label for="background">Character Background</label>
              <textarea 
                id="background" 
                name="background" 
                class="form-control" 
                rows="12"
              ><%= typeof character !== 'undefined' ? character.background : '' %></textarea>
            </div>
          </div>
          
          <!-- Additional Details Tab -->
          <div id="tab-details" class="character-tab-pane">
            <div class="form-group">
              <label for="skills">Skills & Abilities</label>
              <textarea 
                id="skills" 
                name="skills" 
                class="form-control" 
                rows="6"
              ><%= typeof character !== 'undefined' ? character.skills : '' %></textarea>
            </div>
            
            <div class="form-group">
              <label for="fullBio">Full Biography</label>
              <!-- Include text styling toolbar -->
              <%- include('../partials/text-styling-toolbar') %>
              <textarea 
                id="fullBio" 
                name="fullBio" 
                class="form-control" 
                rows="12"
              ><%= typeof character !== 'undefined' ? character.fullBio : '' %></textarea>
              <small style="color: rgba(255, 255, 255, 0.5);">Use this for any additional information about your character</small>
            </div>
          </div>
        </div>
      </div>
      
      <div class="form-group">
        <div class="d-flex align-center">
          <input type="checkbox" id="isPrivate" name="isPrivate" <%= typeof character !== 'undefined' && character.isPrivate ? 'checked' : '' %>>
          <label for="isPrivate" style="margin-left: 10px; margin-bottom: 0;">Make this character private (only visible to you)</label>
        </div>
      </div>
      
      <div class="form-group text-right">
        <a href="/characters/my-characters" class="btn btn-outline mr-2">Cancel</a>
        <button type="submit" class="btn">Create Character</button>
      </div>
    </form>
  </div>
</div>

<script>
  // Handle image preview
  document.getElementById('avatarUrl').addEventListener('input', function(e) {
    const url = e.target.value.trim();
    const previewContainer = document.getElementById('avatar-preview');
    
    if (url) {
      previewContainer.innerHTML = `
        <img src="${url}" alt="Avatar Preview" style="width: 100%; height: 250px; object-fit: cover; border-radius: var(--radius-md);" onerror="imageLoadError(this)">
      `;
    } else {
      previewContainer.innerHTML = `<i class="fas fa-user-circle" style="font-size: 3rem; color: #999;"></i>`;
    }
  });
  
  function imageLoadError(img) {
    img.onerror = null;
    img.parentNode.innerHTML = `
      <div style="width: 100%; height: 250px; display: flex; flex-direction: column; align-items: center; justify-content: center; color: #999;">
        <i class="fas fa-exclamation-triangle" style="font-size: 2rem; margin-bottom: 10px;"></i>
        <span>Invalid image URL</span>
      </div>
    `;
  }
  
  // Tabs functionality
  document.addEventListener('DOMContentLoaded', function() {
    const tabLinks = document.querySelectorAll('.character-tab-link');
    const tabContents = document.querySelectorAll('.character-tab-pane');
    
    // Show avatar preview if URL exists on page load
    const avatarUrl = document.getElementById('avatarUrl').value;
    if (avatarUrl) {
      document.getElementById('avatar-preview').innerHTML = `
        <img src="${avatarUrl}" alt="Avatar Preview" style="width: 100%; height: 250px; object-fit: cover; border-radius: var(--radius-md);" onerror="imageLoadError(this)">
      `;
    }
    
      // Initialize sliders for character stats
      const sliders = document.querySelectorAll('.attribute-slider');
      
      sliders.forEach(slider => {
        const valueDisplay = document.getElementById(`${slider.id}Value`);
        if (valueDisplay) {
          // Update on input
          slider.addEventListener('input', function() {
            valueDisplay.textContent = this.value;
          });
        }
      });
      
      // Define preset functions for the stats
      window.setBalanced = function() {
        setValues({ strength: 50, dexterity: 50, constitution: 50, intelligence: 50, wisdom: 50, charisma: 50 });
      };
      
      window.setWarrior = function() {
        setValues({ strength: 80, dexterity: 60, constitution: 75, intelligence: 40, wisdom: 50, charisma: 45 });
      };
      
      window.setScholar = function() {
        setValues({ strength: 30, dexterity: 45, constitution: 40, intelligence: 85, wisdom: 75, charisma: 55 });
      };
      
      window.setRogue = function() {
        setValues({ strength: 45, dexterity: 85, constitution: 50, intelligence: 60, wisdom: 55, charisma: 65 });
      };
      
      window.setLeader = function() {
        setValues({ strength: 55, dexterity: 50, constitution: 60, intelligence: 65, wisdom: 70, charisma: 85 });
      };
      
      window.resetStats = function() {
        setValues({ strength: 0, dexterity: 0, constitution: 0, intelligence: 0, wisdom: 0, charisma: 0 });
      };
      
      // Helper function to set values
      function setValues(values) {
        for (const [stat, value] of Object.entries(values)) {
          const slider = document.getElementById(stat);
          const valueDisplay = document.getElementById(`${stat}Value`);
          
          if (slider && valueDisplay) {
            slider.value = value;
            valueDisplay.textContent = value;
          }
        }
      }
      
      // Team/Role fields visibility toggle
      const roleSelect = document.getElementById('role');
      if (roleSelect) {
        roleSelect.addEventListener('change', toggleTeamFields);
        // Initialize on page load
        toggleTeamFields();
      }
    });

  function toggleTeamFields() {
    const role = document.getElementById('role').value;
    const teamFields = document.getElementById('teamFields');
    const playerFields = document.getElementById('playerFields');
    
    if (role === 'Player' || role === 'Staff') {
      teamFields.style.display = 'block';
      playerFields.style.display = role === 'Player' ? 'block' : 'none';
    } else {
      teamFields.style.display = 'none';
      playerFields.style.display = 'none';
    }
  }
  
  // Call on page load to set initial state
  document.addEventListener('DOMContentLoaded', toggleTeamFields);
</script>

<style>
  .character-tab-links {
    display: flex;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    margin-bottom: 20px;
  }
  
  .character-tab-link {
    padding: 10px 20px;
    color: var(--lighttext);
    font-weight: var(--medium);
    border-bottom: 3px solid transparent;
    transition: all var(--transition-fast);
  }
  
  .character-tab-link:hover {
    color: var(--header);
  }
  
  .character-tab-link.active {
    color: var(--header);
    border-bottom-color: var(--header);
  }
  
  .character-tab-pane {
    display: none;
  }
  
  .character-tab-pane.active {
    display: block;
  }

  .stats-container {
  padding: 0 10px;
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
}

.stat-item {
  display: flex;
  flex-direction: column;
  margin-bottom: 15px;
}

.attribute-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 5px;
}

.attribute-header label {
  font-weight: var(--semibold);
  margin-bottom: 0;
}

.attribute-value {
  font-weight: var(--semibold);
  color: var(--header);
}

.attribute-slider {
  width: 100%;
  height: 8px;
  -webkit-appearance: none;
  appearance: none;
  background: rgba(0, 0, 0, 0.2);
  outline: none;
  border-radius: 4px;
  overflow: hidden;
  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
}

.attribute-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: var(--header);
  cursor: pointer;
  border: 2px solid white;
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
  transition: all 0.3s ease;
}

.attribute-slider::-webkit-slider-thumb:hover {
  background: var(--header-hover);
  transform: scale(1.1);
}

.attribute-slider::-moz-range-thumb {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: var(--header);
  cursor: pointer;
  border: 2px solid white;
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
  transition: all 0.3s ease;
}

.attribute-slider::-moz-range-thumb:hover {
  background: var(--header-hover);
  transform: scale(1.1);
}

.attribute-slider::-moz-range-progress {
  background-color: var(--header);
  height: 8px;
  border-radius: 4px;
}

.attribute-slider::-webkit-slider-runnable-track {
  height: 8px;
  border-radius: 4px;
}

.attribute-description {
  font-size: var(--text-sm);
  color: rgba(255, 255, 255, 0.7);
  margin-top: 5px;
}

.quick-set-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.1);
  padding: 10px 15px;
  border-radius: var(--radius-md);
}

.quick-set-buttons p {
  margin-bottom: 0;
  margin-right: 10px;
  font-weight: var(--medium);
}

@media (max-width: 768px) {
  .stats-grid {
    grid-template-columns: 1fr;
  }
}
</style>