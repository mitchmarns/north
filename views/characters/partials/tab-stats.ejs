<!-- Add this to views/characters/partials/details-tabs.ejs (after the existing tabs) -->

<!-- Stats Tab -->
<div id="tab-stats" class="character-tab-pane">
  <h3 class="mb-3">Character Stats</h3>
  
  <div class="stats-container">
    <div class="stats-grid">
      <!-- Strength -->
      <div class="stat-item">
        <div class="attribute-header">
          <label for="strength">Strength</label>
          <span class="attribute-value" id="strengthValue"><%= character.strength || 0 %></span>
        </div>
        <input 
          type="range" 
          id="strength" 
          name="strength" 
          min="0" 
          max="100" 
          value="<%= character.strength || 0 %>" 
          class="attribute-slider"
        />
        <div class="attribute-description">
          Physical power, lifting capacity, and melee damage.
        </div>
      </div>
      
      <!-- Dexterity -->
      <div class="stat-item">
        <div class="attribute-header">
          <label for="dexterity">Dexterity</label>
          <span class="attribute-value" id="dexterityValue"><%= character.dexterity || 0 %></span>
        </div>
        <input 
          type="range" 
          id="dexterity" 
          name="dexterity" 
          min="0" 
          max="100" 
          value="<%= character.dexterity || 0 %>" 
          class="attribute-slider"
        />
        <div class="attribute-description">
          Agility, reflexes, balance, and precision.
        </div>
      </div>
      
      <!-- Constitution -->
      <div class="stat-item">
        <div class="attribute-header">
          <label for="constitution">Constitution</label>
          <span class="attribute-value" id="constitutionValue"><%= character.constitution || 0 %></span>
        </div>
        <input 
          type="range" 
          id="constitution" 
          name="constitution" 
          min="0" 
          max="100" 
          value="<%= character.constitution || 0 %>" 
          class="attribute-slider"
        />
        <div class="attribute-description">
          Health, stamina, and vital force.
        </div>
      </div>
      
      <!-- Intelligence -->
      <div class="stat-item">
        <div class="attribute-header">
          <label for="intelligence">Intelligence</label>
          <span class="attribute-value" id="intelligenceValue"><%= character.intelligence || 0 %></span>
        </div>
        <input 
          type="range" 
          id="intelligence" 
          name="intelligence" 
          min="0" 
          max="100" 
          value="<%= character.intelligence || 0 %>" 
          class="attribute-slider"
        />
        <div class="attribute-description">
          Learning ability, memory, and reasoning.
        </div>
      </div>
      
      <!-- Wisdom -->
      <div class="stat-item">
        <div class="attribute-header">
          <label for="wisdom">Wisdom</label>
          <span class="attribute-value" id="wisdomValue"><%= character.wisdom || 0 %></span>
        </div>
        <input 
          type="range" 
          id="wisdom" 
          name="wisdom" 
          min="0" 
          max="100" 
          value="<%= character.wisdom || 0 %>" 
          class="attribute-slider"
        />
        <div class="attribute-description">
          Perception, intuition, and insight.
        </div>
      </div>
      
      <!-- Charisma -->
      <div class="stat-item">
        <div class="attribute-header">
          <label for="charisma">Charisma</label>
          <span class="attribute-value" id="charismaValue"><%= character.charisma || 0 %></span>
        </div>
        <input 
          type="range" 
          id="charisma" 
          name="charisma" 
          min="0" 
          max="100" 
          value="<%= character.charisma || 0 %>" 
          class="attribute-slider"
        />
        <div class="attribute-description">
          Force of personality, persuasiveness, and leadership.
        </div>
      </div>
    </div>
    
    <div class="row mt-4">
      <div class="col">
        <div class="form-group">
          <label for="personalityType">Personality Type (Optional)</label>
          <input 
            type="text" 
            id="personalityType" 
            name="personalityType" 
            class="form-control" 
            value="<%= character.personalityType || '' %>" 
            placeholder="e.g., INFJ, 4w5, etc."
          />
          <small style="color: rgba(255, 255, 255, 0.5);">MBTI, Enneagram, or other personality system</small>
        </div>
      </div>
      
      <div class="col">
        <div class="form-group">
          <label for="occupation">Occupation (Optional)</label>
          <input 
            type="text" 
            id="occupation" 
            name="occupation" 
            class="form-control" 
            value="<%= character.occupation || '' %>" 
            placeholder="e.g., Doctor, Mechanic, Student, etc."
          />
        </div>
      </div>
    </div>
    
    <div class="quick-set-buttons mt-3">
      <p>Quick Presets:</p>
      <button type="button" class="btn btn-sm" onclick="setBalanced()">Balanced</button>
      <button type="button" class="btn btn-sm" onclick="setWarrior()">Warrior</button>
      <button type="button" class="btn btn-sm" onclick="setScholar()">Scholar</button>
      <button type="button" class="btn btn-sm" onclick="setRogue()">Rogue</button>
      <button type="button" class="btn btn-sm" onclick="setLeader()">Leader</button>
      <button type="button" class="btn btn-sm btn-danger" onclick="resetStats()">Reset All</button>
    </div>
  </div>
</div>

<!-- Add to the character form style section -->
<style>
  .stats-container {
    padding: 0 10px;
  }
  
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
  }
  
  .stat-item {
    display: flex;
    flex-direction: column;
    margin-bottom: 15px;
  }
  
  .attribute-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 5px;
  }
  
  .attribute-header label {
    font-weight: var(--semibold);
    margin-bottom: 0;
  }
  
  .attribute-value {
    font-weight: var(--semibold);
    color: var(--header);
  }
  
  .attribute-slider {
    width: 100%;
    height: 8px;
    -webkit-appearance: none;
    appearance: none;
    background: rgba(0, 0, 0, 0.2);
    outline: none;
    border-radius: 4px;
    overflow: hidden;
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
  }
  
  .attribute-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: var(--header);
    cursor: pointer;
    border: 2px solid white;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
    transition: all 0.3s ease;
  }
  
  .attribute-slider::-webkit-slider-thumb:hover {
    background: var(--header-hover);
    transform: scale(1.1);
  }
  
  .attribute-slider::-moz-range-thumb {
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: var(--header);
    cursor: pointer;
    border: 2px solid white;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
    transition: all 0.3s ease;
  }
  
  .attribute-slider::-moz-range-thumb:hover {
    background: var(--header-hover);
    transform: scale(1.1);
  }
  
  .attribute-slider::-moz-range-progress {
    background-color: var(--header);
    height: 8px;
    border-radius: 4px;
  }
  
  .attribute-slider::-webkit-slider-runnable-track {
    height: 8px;
    border-radius: 4px;
  }
  
  .attribute-description {
    font-size: var(--text-sm);
    color: rgba(255, 255, 255, 0.7);
    margin-top: 5px;
  }
  
  .quick-set-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.1);
    padding: 10px 15px;
    border-radius: var(--radius-md);
  }
  
  .quick-set-buttons p {
    margin-bottom: 0;
    margin-right: 10px;
    font-weight: var(--medium);
  }
  
  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<!-- Add JavaScript for the stat presets to views/characters/create.ejs or edit.ejs -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Update attribute values when sliders change
    const sliders = document.querySelectorAll('.attribute-slider');
    
    sliders.forEach(slider => {
      const valueDisplay = document.getElementById(`${slider.id}Value`);
      
      // Update on input
      slider.addEventListener('input', function() {
        valueDisplay.textContent = this.value;
      });
    });
  });
  
  // Define preset functions
  function setBalanced() {
    setValues({ strength: 50, dexterity: 50, constitution: 50, intelligence: 50, wisdom: 50, charisma: 50 });
  }
  
  function setWarrior() {
    setValues({ strength: 80, dexterity: 60, constitution: 75, intelligence: 40, wisdom: 50, charisma: 45 });
  }
  
  function setScholar() {
    setValues({ strength: 30, dexterity: 45, constitution: 40, intelligence: 85, wisdom: 75, charisma: 55 });
  }
  
  function setRogue() {
    setValues({ strength: 45, dexterity: 85, constitution: 50, intelligence: 60, wisdom: 55, charisma: 65 });
  }
  
  function setLeader() {
    setValues({ strength: 55, dexterity: 50, constitution: 60, intelligence: 65, wisdom: 70, charisma: 85 });
  }
  
  function resetStats() {
    setValues({ strength: 0, dexterity: 0, constitution: 0, intelligence: 0, wisdom: 0, charisma: 0 });
  }
  
  // Helper function to set values
  function setValues(values) {
    for (const [stat, value] of Object.entries(values)) {
      const slider = document.getElementById(stat);
      const valueDisplay = document.getElementById(`${stat}Value`);
      
      if (slider && valueDisplay) {
        slider.value = value;
        valueDisplay.textContent = value;
      }
    }
  }
</script>